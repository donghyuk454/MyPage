plugins {
	id 'org.springframework.boot' version '2.6.7'
	id "org.sonarqube" version "3.0"
	id 'jacoco'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.mong'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.code.gson:gson:2.8.7'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacoco {
	toolVersion = "0.8.7"
}

test {
	finalizedBy jacocoTestReport
	useJUnitPlatform()
}

jacocoTestReport {
	finalizedBy jacocoTestCoverageVerification

	reports {
		csv.required = false
		xml.required = true
		html.required = true
	}

	def qDomains = []
	for (qPattern in "**/QA".."**/QZ") {
		qDomains.add(qPattern + "*")
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ["com/mong/project/exception/*",
							  "com/mong/project/dto/*",
							  "com/mong/project/service/FileService*",] + qDomains)
		}))
	}
}

jacocoTestCoverageVerification {
	def qDomains = []

	for (qPattern in "*.QA".."*.QZ") {
		qDomains.add(qPattern + "*")
	}

	violationRules {
		rule {
			element = 'CLASS'

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.40
			}

			limit {
				counter = 'METHOD'
				value = 'COVEREDRATIO'
				minimum = 0.40
			}

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.40
			}

			excludes = ['com.mong.project.MyProjectApplication',
						'com.mong.project.exception.*',
						"com.mong.project.dto.*",
						"com.mong.project.service.FileService*"] + qDomains
		}
	}
}
